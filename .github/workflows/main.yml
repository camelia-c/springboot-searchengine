name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:


env:
  IMAGE_NAME: sbsearchengine 


jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - name: Context info
        run:  |
          echo "Repository: ${{ github.repository }}"
          echo "Branch: ${{ github.ref }}"
          echo "CI pipeline triggered by event: ${{ github.event_name }}"
          
      - name: Install tree utility on runner
        run: sudo apt-get install tree
    
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      # Runs a single command using the runners shell
      - name: Run a one-line script
        run: echo "The ${{ github.repository }} repository has been cloned to the runner."

      - name: Repository structure of folders and files
        run: |
          tree ${{ github.workspace }}
          
      #list modified/added/deleted files (see https://github.com/marketplace/actions/get-all-changed-files)
      - uses: jitterbit/get-changed-files@v1
        with:
          format: space-delimited  
          
      - name: Build the Docker image
        run: docker build --no-cache --rm --file docker/Dockerfile_SpringBoot --tag $IMAGE_NAME .
        
      - name: List Docker images
        run: docker image ls | grep -E "sbsearchengine|jdk" 
        
      - name: Log in to GitHub Container Registry 
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin
        
      - name: Push image to GitHub Container Registry 
        run: |
             docker tag $IMAGE_NAME ghcr.io/camelia-c/$IMAGE_NAME
             docker push ghcr.io/camelia-c/$IMAGE_NAME
          
      - run: echo "ðŸŽ‰ This job's status is ${{ job.status }}."
